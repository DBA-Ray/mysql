#!/bin/bash

source /etc/profile ##加载环境变量，否则在crontab任务里会存在问题

if [ $# -ne 1 ]

then

    echo "usage: `basename $0` [full|incr|clean]"

    exit 1

fi 

hostname={{ ansible_hostname }}               # the name for bakcup

backupdir={{ backupdir }}

conf_file={{ basedir }}/etc/my.cnf          # the mysql config file

bakuser=root

bakpass={{ root_password }}

baklog="$backupdir/log"

host="localhost"

port={{ mysql_port }}

datadir={{ datadir }}

socket={{ socket }}

xtrabackup="xtrabackup"

remotedir="$backupdir/databak/${hostname}"

time=`date "+%Y%m%d_%H%M%S"`              # don't modify

delete_time=`date  "+%Y%m%d" -d "-7 days"`

chkpointdir="$backupdir/chkpoint/"

clean() {

find ${remotedir}/ -name "${hostname}_${delete_time}*" -exec rm -rf {} \;

}

full() {
 
##创建日备份目录

if [ ! -d ${remotedir}/${hostname}_${time}_full ]
 
then

    mkdir -p ${remotedir}/${hostname}_${time}_full

fi
 
##调用xtrabackup工具实现热备

${xtrabackup} --defaults-file=${conf_file} --user=${bakuser} --password=${bakpass} --host=${host} --port=${port} --datadir=${datadir} --socket=${socket} --no-lock --extra-lsndir=${chkpointdir} --parallel=4 --backup --target-dir=${remotedir}/${hostname}_${time}_full

##调用xtrabackup工具准备还原

#${xtrabackup} --prepare --target-dir=${remotedir}/${hostname}_${time}_full/

##备份配置文件

cp ${conf_file} ${remotedir}/${hostname}_${time}_full/

##压缩备份

cd ${remotedir}/

tar -zcvf ./${hostname}_${time}_full.tgz ./${hostname}_${time}_full

##删除原始备份

rm -rf ${remotedir}/${hostname}_${time}_full

}

   
incr() {
 
##创建日备份目录

mkdir /${remotedir}/${hostname}_${time}_incr/

##获取上一次的备份位置点

lsn=`cat ${chkpointdir}/xtrabackup_checkpoints|grep to_lsn|awk '{print $NF}'`
 
##调用xtrabackup工具实现热备

${xtrabackup} --defaults-file=${conf_file} --user=${bakuser} --password=${bakpass} --host=${host} --port=${port} --datadir=${datadir} --socket=${socket} --no-lock --extra-lsndir=${chkpointdir} --parallel=4 --backup --incremental-lsn=${lsn} --target-dir=${remotedir}/${hostname}_${time}_incr/
 
##备份配置文件

cp -f ${conf_file} ${remotedir}/${hostname}_${time}_incr/

##压缩备份

cd ${remotedir}/

tar -zcvf ./${hostname}_${time}_incr.tgz ./${hostname}_${time}_incr

##删除原始备份

rm -rf ${remotedir}/${hostname}_${time}_incr
 
}

case "$1" in

full)

full

;;

incr)

incr

;;

clean)

clean

;;

*)

echo "Usage: $0 full|incr|clean"

esac
