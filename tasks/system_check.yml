- name: Stop firewalld
  service: name=firewalld state=stopped enabled=no

- name: Disable selinux
  lineinfile:
    dest: /etc/selinux/config
    regexp: "^SELINUX="
    line: "SELINUX=disabled"

- name: Uninstall mariadb
  yum:
    name: ["mariadb", "Percona-XtraDB-Cluster-shared-compat-57"]
    state: absent

- name: Copy the mysql-community.repo
  copy: src=mysql-community.repo dest=/etc/yum.repos.d/mysql-community.repo

- name: Enable mysql5.7 repo
  copy: src=mysql-community.repo57 dest=/etc/yum.repos.d/mysql-community.repo
  when: mysql57 

- name: Install base packages
  yum:
    name: "{{ packages }}"
    state: latest

- name: Disable kernel hugepage
  shell: "echo never > /sys/kernel/mm/transparent_hugepage/enabled;echo never > /sys/kernel/mm/transparent_hugepage/defrag"

- name: Disable swap
  sysctl:
    name: vm.swappiness
    value: '0'
    sysctl_file: /etc/sysctl.conf
    state: present
    reload: yes

- name: Disable file system atime,barrier for root directory
  mount:
    path: /
    src: "{{ ansible_cmdline.root }}"
    fstype: ext4
    opts: defaults,noatime,nobarrier
    state: mounted
    backup: yes
    dump: '1'
    passno: '1'

- name: Remount file path for root directory
  mount:
    path: /
    src: "{{ ansible_cmdline.root }}"
    fstype: ext4
    opts: defaults,noatime,nobarrier
    state: remounted

- name: Disable file system atime,barrier for data directory
  mount:
    path: "{{ install_dir }}"
    src: "{{ fstab_src }}"
    fstype: xfs
    opts: defaults,noatime,nobarrier
    state: mounted
    backup: yes
  when: whether_remount_data_disk

- name: Remount file path for data directory
  mount:
    path: "{{ install_dir }}"
    src: "{{ fstab_src }}"
    fstype: xfs
    opts: defaults,noatime,nobarrier
    state: remounted
  when: whether_remount_data_disk

- name: Install the mysql repo
  yum:
    name: "{{ remote_repo }}"
    state: present
  register: repo
  retries: 7
  until: repo is succeeded

- name: Stop mysql server
  systemd:
    name: mysqld
    state: stopped
  when: whether_uninstall

- name: Remove existing mysql directory
  file:
    path: "{{ datadir }}"
    state: absent
    remote_src: 'yes'
  when: whether_uninstall

#- name: upgrade all packages
#  yum:
#    name: '*'
#    state: latest