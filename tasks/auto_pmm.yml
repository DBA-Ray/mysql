- name: Add pmm user
  mysql_user:
    login_user: root
    login_password: "{{ root_password }}"
    name: pmm
    password: "{{ mysql_monitor_password }}"
    update_password: always
    login_port: "{{ mysql_port }}"
    host: localhost
    priv: '*.*:SELECT, PROCESS, SUPER, REPLICATION CLIENT, RELOAD'
    sql_log_bin: yes
    login_unix_socket: "{{ socket }}"
    state: present
  when: ansible_hostname == "mgr1" or
        ansible_hostname == "master"

- name: Install docker
  yum:
    name: docker
    state: latest
  when: ansible_hostname == "ansible"

- name: Enable docker server
  systemd:
    name: docker
    state: started
    enabled: yes

- name: Copy docker directory to installdir
  copy: src=/var/lib/docker dest={{ installdir }}/ remote_src=yes

- name: Create a symbolic link
  file:
    src: {{ installdir }}/docker
    dest: /var/lib/docker
    owner: root
    group: root
    state: link
  notify: Reload systemd

- name: Start docker server
  systemd:
    name: docker
    state: started

- name: Creating PMM Data Container
  docker_container:
    name: pmm-data
    image: percona/pmm-server:latest
    state: present
    volumes:
    - /opt/prometheus/data
    - /opt/consul-data
    - /var/lib/mysql
    - /var/lib/grafana
    command: /bin/true 

- name: Running PMM Data Container secured with pmm_server_username and pmm_server_password
  docker_container:
    name: pmm-server
    image: percona/pmm-server:latest
    state: started
    volumes_from:
    - pmm-data
    env: "{{ __pmm_server_env }}"
    ports:
    - "{{ pmm_server_http_port }}:80"
    restart_policy: always

- name: Config pmm server via pmm-admin
  shell: "pmm-admin config --server ansible:{{ pmm_server_http_port }} --server-user pmm --server-password {{pmm_password}}"
  args:
    executable: /bin/bash
  when: ansible_hostname != "ansible"

- name: Add mysql via pmm-admin for mgr group
  shell: "pmm-admin add mysql --user pmm --password {{pmm_password}}"
  args:
    executable: /bin/bash
  loop: "{{ hostvars[groups['mgr']]['inventory_hostname'] }}"
  when: ansible_hostname in item

- name: Add mysql via pmm-admin for mysql group
  shell: "pmm-admin add mysql --user pmm --password {{pmm_password}}"
  args:
    executable: /bin/bash
  loop: "{{ hostvars[groups['mysql']]['inventory_hostname'] }}"
  when: ansible_hostname in item

- name: Add proxysql via pmm-admin for proxysql group
  shell: "{{ item }}"
  args:
    executable: /bin/bash
  with_items:
    - pmm-admin add proxysql:metrics --dsn "stats:stats@tcp(localhost:6032)/"
    - pmm-admin add linux:metrics
  when: ansible_hostname = "proxysql1" or
        ansible_hostname = "proxysql2"