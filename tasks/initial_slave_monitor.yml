# - name: Modify read_only parameter in my.cnf
#   replace:
#     path: "{{ etcdir }}/my_{{ mysql_port }}.cnf"
#     regexp: "{{ item.original }}"
#     replace: "{{ item.change }}"
#   with_items:
#     - { original: '#read_only = 1', change: 'read_only = 1' }
#     - { original: 'replica_preserve_commit_order = on', change: 'replica_preserve_commit_order = off' }

# - name: Set slave exclusive parameter
#   mysql_variables:
#     login_user: root
#     login_password: "{{ root_password }}"
#     login_port: "{{ mysql_port }}"
#     login_unix_socket: "{{ socket }}"
#     variable: "{{ item.original }}"
#     value: "{{ item.change }}"
#   with_items:
#     - { original: 'read_only', change: '1' }
#     - { original: 'replica_preserve_commit_order', change: '0' }

- name: Config replication for mgr1 without connection failover
  mysql_replication:
    login_port: "{{ mysql_port }}"
    login_user: root
    login_password: "{{ root_password }}"
    login_unix_socket: "{{ socket }}"
    mode: changemaster
    master_host: mgr1
    master_port: "{{ mysql_port }}"
    master_user: repl
    master_password: "{{ mysql_monitor_password }}"
    master_auto_position: yes
  when: not asynchronous_connection_failover | default (True)

- name: Config asynchronous_connection_failover
  shell: "sudo sh -x {{ shelldir }}/asynchronous_connection_failover.sh '{{ root_password }}' '{{ mysql_monitor_password }}'"

- name: Start slave status for slaves
  mysql_replication:
    login_port: "{{ mysql_port }}"
    login_user: root
    login_password: "{{ root_password }}"
    login_unix_socket: "{{ socket }}"
    mode: startslave

- name: Get slave status from slaves
  mysql_replication:
    login_port: "{{ mysql_port }}"
    login_user: root
    login_password: "{{ root_password }}"
    login_unix_socket: "{{ socket }}"
    mode: getslave
  register: status

- name: Show the status of replicas
  debug:
    msg:
      - "Slave_SQL_Running is:{{ status | json_query(\"Slave_SQL_Running\") }}"
      - "Slave_IO_Running is: {{ status | json_query(\"Slave_IO_Running\") }}"
      - "Seconds_Behind_Master is: {{ status | json_query(\"Seconds_Behind_Master\") }}"
      - "Last_Error is: {{ status | json_query(\"Last_Error\") }}"
      - "Master_Host is: {{ status | json_query(\"Master_Host\") }}"
