- name: Backing up the original my.cnf
  copy:
    src: "{{ etcdir }}/my.cnf"
    dest: "{{ etcdir }}/myback.cnf"
    owner: mysql
    group: mysql
    mode: 0644
    backup: yes
    remote_src: yes

- name: Rendering mysql parameter file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: mysql
    group: mysql
    mode: 0644
  with_items:
    - { src: 'my.cnf.j2', dest: "{{ etcdir }}/my.cnf" }

- name: Modify semisync parameter and clone parameter in my.cnf
  replace:
    path: "{{ etcdir }}/my.cnf"
    regexp: "{{ item.original }}"
    replace: "{{ item.change }}"
  with_items:
#    - { original: '#rpl_semi_sync_slave_enabled = 1', change: 'rpl_semi_sync_slave_enabled = 1' }
#    - { original: '#rpl_semi_sync_master_enabled = 1', change: 'rpl_semi_sync_master_enabled = 1' }
#    - { original: '#rpl_semi_sync_master_timeout = 500', change: 'rpl_semi_sync_master_timeout = 500' }
    - { original: '#clone_enable_compression = 1', change: 'clone_enable_compression = 1' }

- name: Rendering bash file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0744
  with_items:
    - { src: 'my.cnf_auto.sh.j2', dest: "{{ etcdir }}/my.cnf_auto.sh" }

- name: Auto config my.cnf
  shell: "sh -x {{ etcdir }}/my.cnf_auto.sh"

- name: Remove my.cnf_auto.sh
  file:
    path: "{{ etcdir }}/my.cnf_auto.sh"
    state: absent
    remote_src: yes

- name: Replace LimitNOFILE=42010
  lineinfile:
    dest: "/usr/lib/systemd/system/mysqld.service"
    regexp: "^LimitNOFILE"
    line: "LimitNOFILE = 42010"

- name: Force systemd to reread configs
  systemd:
    daemon_reload: yes

- name: Restart mysql server
  systemd:
    name: mysqld
    state: restarted

- name: Wait for MySql is running
  pause: seconds=7
  when: is_mgr | default(False)

- name: Wait the status of mysql group replication is "YES"
  shell: mysql --login-path=mysql_"{{ mysql_port }}" -e "SELECT viable_candidate FROM sys.gr_member_routing_candte_status\G;"|grep viable_candidate|awk '{printf $2}'
  register: viable_candidate
  retries: 7
  until: "{{ viable_candidate.stdout }} == YES"
  when: is_mgr | default(False)