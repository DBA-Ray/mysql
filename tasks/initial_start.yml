#initial and start mysql server
- name: Ensure group "mysql" exists
  group:
    name: mysql
    state: present

- name: Ensure the user "mysql" exists
  user:
    name: mysql
    group: mysql

- name: Create directories for mysql
  file: path={{ item }} state=directory owner=mysql group=mysql
  with_items:
    - "{{ package_dir }}"
    - "{{ shelldir }}"
    - "{{ monitordir }}"
    - "{{ basedir }}"
    - "{{ etcdir }}"
    - "{{ logdir }}"
    - "{{ masterdir }}"

- name: 复制安装包
  copy:
    src: "{{ package_name }}"
    dest: "{{ package_dir }}"

- name: 解压安装包
  unarchive:
    src: "{{ package_dir }}/{{ package_name }}"
    dest: "{{ package_dir }}"
    remote_src: yes

- name: 复制mysql二进制包
  copy:
    src: "{{ package_dir }}/{{ mysql_version }}/"
    dest: "{{ basedir }}"
    remote_src: yes

- name: 把mysql执行路径添加至环境变量
  lineinfile:
    path: /etc/profile
    line: export PATH={{ basedir }}/bin:$PATH
    insertafter: EOF
    state: present

- name: Source profile
  shell: "source /etc/profile"

- name: Rendering mysql parameter file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: mysql
    group: mysql
    mode: 0644
  with_items:
    - { src: 'mysql.conf.j2', dest: '/usr/lib/tmpfiles.d/mysql.conf' }
    - { src: 'mysqld.service.j2', dest: '/usr/lib/systemd/system/mysqld.service' }
    - { src: 'my.cnf.j2', dest: "{{ etcdir }}/my.cnf" }

- name: Rendering bash file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: root
    mode: 0744
  with_items:
    - { src: 'my.cnf_auto.sh.j2', dest: "{{ etcdir }}/my.cnf_auto.sh" }
    - { src: 'see_log.sh.j2', dest: "{{ shelldir }}/see_log.sh" }

- name: Auto config my.cnf
  shell: "sh -x {{ etcdir }}/my.cnf_auto.sh"
  
- name: Modify read_only parameter in my.cnf
  replace:
    path: "{{ etcdir }}/my.cnf"
    regexp: "{{ item.original }}"
    replace: "{{ item.change }}"
  with_items:
    - { original: '#read_only = 1', change: 'read_only = 1' }
  when: is_slave

- name: Obtain user_whitelist
  shell: "cat /tmp/user_whitelist.txt"
  register: user_whitelist

- name: Initial mysql server
  shell: "{{ item }}"
  with_items:
    - "{{ basedir }}/bin/mysqld --defaults-file={{ etcdir }}/my.cnf --user=mysql --lower-case-table-names=1 \
    --initialize-insecure --basedir={{ basedir }} --datadir={{ datadir }}"
    - "{{ basedir }}/bin/mysql_ssl_rsa_setup --datadir={{ datadir }}"

- name: Start mysql server
  systemd:
    name: mysqld
    state: started

- name: Enable mysql server
  systemd:
    name: mysqld
    state: started
    enabled: yes

- name: Modify root password
  mysql_user:
    login_user: root
    login_password:
    name: root
    password: "{{ root_password }}"
    update_password: always
    login_port: "{{ mysql_port }}"
    priv: '*.*:ALL,GRANT'
    login_unix_socket: "{{ socket }}"
    state: present

- name: Add remote root user
  mysql_user:
    login_user: root
    login_password: "{{ root_password }}"
    name: root
    password: "{{ root_password }}"
    update_password: always
    login_port: "{{ mysql_port }}"
    host: "{{ user_whitelist.stdout }}"
    priv: '*.*:ALL,GRANT'
    sql_log_bin: no
    login_unix_socket: "{{ socket }}"
    state: present

- name: Add repl user
  mysql_user:
    login_user: root
    login_password: "{{ root_password }}"
    name: repl
    password: "{{ mysql_monitor_password }}"
    update_password: always
    login_port: "{{ mysql_port }}"
    host: "{{ user_whitelist.stdout }}"
    priv: '*.*:REPLICATION SLAVE,SUPER,REPLICATION CLIENT,SELECT'
    sql_log_bin: no
    login_unix_socket: "{{ socket }}"
    state: present

- name: Add pmm user
  mysql_user:
    login_user: root
    login_password: "{{ root_password }}"
    name: pmm
    password: "{{ pmm_password }}"
    update_password: always
    login_port: "{{ mysql_port }}"
    host: localhost
    priv: '*.*:SELECT,RELOAD,PROCESS,SUPER,REPLICATION CLIENT,BACKUP_ADMIN/PERFORMANCE_SCHEMA.*:SELECT,UPDATE,DELETE,DROP'
    sql_log_bin: no
    login_unix_socket: "{{ socket }}"
    state: present

- name: Set semisync parameter
  mysql_variables:
    login_user: root
    login_password: "{{ root_password }}"
    login_port: "{{ mysql_port }}"
    login_unix_socket: "{{ socket }}"
    variable: "{{ item.original }}"
    value: "{{ item.change }}"
  with_items:
    - { original: 'rpl_semi_sync_slave_enabled', change: '1' }
    - { original: 'rpl_semi_sync_master_enabled', change: '1' }
    - { original: 'rpl_semi_sync_master_timeout', change: '500' }
    - { original: 'clone_enable_compression', change: '1' }

- name: Modify semisync parameter in my.cnf
  replace:
    path: "{{ etcdir }}/my.cnf"
    regexp: "{{ item.original }}"
    replace: "{{ item.change }}"
  with_items:
    - { original: '#rpl_semi_sync_slave_enabled = 1', change: 'rpl_semi_sync_slave_enabled = 1' }
    - { original: '#rpl_semi_sync_master_enabled = 1', change: 'rpl_semi_sync_master_enabled = 1' }
    - { original: '#rpl_semi_sync_master_timeout = 500', change: 'rpl_semi_sync_master_timeout = 500' }
    - { original: '#clone_enable_compression = 1', change: 'clone_enable_compression = 1' }